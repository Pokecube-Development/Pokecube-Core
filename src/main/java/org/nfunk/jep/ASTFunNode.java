/*****************************************************************************
 * JEP - Java Math Expression Parser 2.3.1
 * January 26 2006
 * (c) Copyright 2004, Nathan Funk and Richard Morris
 * See LICENSE.txt for license information.
 *****************************************************************************/
/* Generated By:JJTree: Do not edit this line. ASTFunNode.java */
package org.nfunk.jep;

import org.nfunk.jep.function.PostfixMathCommandI;
// rjm unneeded import
// import java.util.*;

/**
 * Function Node
 */
public class ASTFunNode extends SimpleNode
{

    /** The function class used to evaluate the node */
    private PostfixMathCommandI pfmc;

    /** Name of the function */
    private String name;

    /** ID of the operator (if it is one) */
    private Operator opID = null;

    /**
     * Creates a new ASTFunNode
     */
    public ASTFunNode(int id)
    {
        super(id);
    }

    /**
     * Creates a new ASTFunNode
     */
    public ASTFunNode(Parser p, int id)
    {
        super(p, id);
    }

    /**
     * Returns the name of the node (operator symbol or function name).
     */
    public String getName()
    {
        return this.name;
    }

    /**
     * Returns the id number of the operator if the node is an operator.
     */
    public Operator getOperator()
    {
        return this.opID;
    }

    /**
     * Returns the math command class associated with this node.
     */
    public PostfixMathCommandI getPFMC()
    {
        return this.pfmc;
    }

    /**
     * Returns true if node is an operator.
     */
    public boolean isOperator()
    {
        return this.opID != null;
    }

    /**
     * Accept the visitor.
     */
    @Override
    public Object jjtAccept(ParserVisitor visitor, Object data) throws ParseException
    {
        return visitor.visit(this, data);
    }

    /**
     * Sets the function for a node. A name and function class must
     * be specified.
     */
    public void setFunction(String name_in, PostfixMathCommandI pfmc_in)
    {
        this.name = name_in;
        this.pfmc = pfmc_in;
    }

    /**
     * Sets the opID, name and pfmc for this node by looking up the values
     * in the Operators class
     */
    public void setOperator(Operator op)
    {
        this.opID = op;
        this.pfmc = op.getPFMC();
        this.name = op.getName();
    }

    /**
     * Returns a string containing the function name.
     */
    @Override
    public String toString()
    {
        return "Function \"" + this.name + "\"";
    }
}
