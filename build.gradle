buildscript {
    repositories {
        jcenter()
        maven {
            name = "Forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Sonatype"
            url = 'https://oss.sonatype.org/content/groups/public'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.9'
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.


version = "${version_minecraft}-${version_compile}"
group= ""
archivesBaseName = "${compile_name}"

repositories {
}

dependencies {
    //Thut Core
    deobfCompile "thutcore:thutcore:${version_minecraft}:${version_thutcore}"
    //Thut Wearables
    deobfCompile "thut-wearables:thut-wearables:release:deobf"
    
    //Pokecube Revival
    deobfCompile "pokecube-revival:pokecube-revival:release:deobf"
    //Pokecube Mobs
    deobfCompile "pokecube-mobs:pokecube-mobs:release:deobf"
    //Inventory tweaks
    compile "inventory-tweaks:InventoryTweaks:1.63:api"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${version_minecraft}-${version_forge}"
    runDir = "run"
    mappings = "${version_mappings}"
    useDepAts = false
    
    replace "@VERSION", project.version_compile
    replaceIn "PokecubeMod.java"
    replace "@MCVERSION", "${version_mcsupport}"
    replaceIn "PokecubeMod.java"
    replace "@MINVERSION", "[${version_min_support},)"
    replaceIn "PokecubeMod.java"
    replace "@FORGEVERSION", "[${version_forge},)"
    replaceIn "PokecubeMod.java"
    replace "@THUTCORE", "[${version_thutcore},)"
    replaceIn "PokecubeMod.java"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
}

jar {
        manifest {
            attributes "FMLAT": "${at_file}"
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
